@page "/identity/account/login"
@using Client.Pages.OtherPages

@layout AuthenticationLayout

@inject SfDialogService DialogService

<div class="container">
    <div class="row">
        <div class="col-lg-4"></div>
        <div class="col-lg-4">
            <EditForm Model="_user" OnValidSubmit="HandleLogin" Enhance>
                <DataAnnotationsValidator/>
                <div class="card bg-dark"
                     style="opacity: 0.9; margin-top: 50%; border-radius: 10px; color: white; font-weight: bold;">
                    <div class="card-header text-center fs-5 mb-2">Login</div>
                    <div class="container">
                        <div class="row">
                            <div class="col-lg-4 col-md-4 col-sm-4"></div>
                            <div class="col-lg-4 col-md-4 col-sm-4 d-flex justify-content-center">
                                <img src="../images/companyLogos/mavzerpansiyon.png" alt="Mavzer Pansiyon"
                                     style="border-radius: 20px;" height="100">
                            </div>
                            <div class="col-lg-4 col-md-4 col-sm-4"></div>
                        </div>
                    </div>
                    <div class="card-body">
                        <div class="form-group mt-3">
                            <label class="form-label">Email</label>
                            <InputText class="form-control" @bind-Value="_user.Email"/>
                        </div>
                        <div class="form-group mt-3">
                            <label class="form-label">Password</label>
                            <InputText type="password" class="form-control" @bind-Value="_user.Password"/>
                        </div>
                        <div class="form-group mt-3">
                            @if (ShowLoadingButton)
                            {
                                <ButtonLoadingSpinner/>
                            }
                            else
                            {
                                <button class="btn btn-outline-primary float-end" type="submit">Login</button>
                            }
                        </div>
                    </div>
                    <div class="card-footer">
                        <span class="text-center">
                            Don't have account?
                            <a href="identity/account/register">Sign Up</a>
                            <ValidationSummary/>
                        </span>
                    </div>
                </div>
            </EditForm>
        </div>
        <div class="col-lg-4"></div>
    </div>
</div>

@code {
    private bool ShowLoadingButton { get; set; }
    private readonly Login _user = new();
    [CascadingParameter] public Task<AuthenticationState> AuthenticationState { get; set; } = default!;

    protected override async Task OnInitializedAsync()
    {
        ShowLoadingButton = false;
        await CheckUserAuthentication();
    }

    async Task HandleLogin()
    {
        ShowLoadingButton = true;
        var response = await AccountService.SignInAsync(_user);
        if (response.Flag)
        {
            await DisplayDialog(response.Message, "Login Success");
            var customAuthStateProvider = (CustomAuthenticationStateProvider)AuthStateProvider;
            await customAuthStateProvider.UpdateAuthenticationState(new UserSession
            {
                Token = response.Token,
                RefreshToken =
                    response.RefreshToken
            });
            NavManager.NavigateTo("/", forceLoad: true);
        }
        else
        {
            await DisplayDialog(response.Message, "Login Failed");
        }

        ShowLoadingButton = false;
    }

    private async Task DisplayDialog(string content, string title)
    {
        await DialogService.AlertAsync(content, title);
    }

    private async Task CheckUserAuthentication()
    {
        var user = (await AuthenticationState).User;
        bool isAuthenticated = user.Identity?.IsAuthenticated ?? false;

        if (isAuthenticated)
            NavManager.NavigateTo("/home/dashboard");
    }

}